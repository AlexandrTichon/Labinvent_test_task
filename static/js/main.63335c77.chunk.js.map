{"version":3,"sources":["assets/img/refresh_icon.svg","components/contrrolInputBlock/contrrolInputBlock.js","components/ethernetSettings/ethernetSettings.js","components/selectWireless/selectWireless.js","components/wirelessSettings/wirelessSettings.js","components/controlBtns/controlBtns.js","submit.js","components/app/App.js","index.js"],"names":["module","exports","__webpack_require__","p","ContrrolInputBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","disable","switcher","bind","assertThisInitialized","setState","prevState","_this$props","componentChilds","setsId","mainBtn","minorBtn","childs","inputName","concat","inputMinorId","id","inputMainId","blockDisabled","react_default","a","createElement","Fragment","htmlFor","className","cn","disabled","type","name","defaultChecked","onChange","label","map","child","key","uniqid","required","React","Component","defaultProps","EthernetSettings","_ref","title","contrrolInputBlock_contrrolInputBlock","SelectWireless","data","fetchStatus","fetchData","_this2","setTimeout","fetch","then","response","json","result","displayData","forEach","item","push","unqid","value","sort","item1","item2","strength","favorite","catch","err","console","error","disableBlock","_this$state","src","refreshIcon","alt","onClick","WirelessSettings","disableWifi","disableSequrity","switchWifi","switchSequrity","selectWireless_selectWireless","ethernetSettings_ethernetSettings","ControlBtns","submit","event","preventDefault","persist","formElements","toConsumableArray","target","dataToSave","element","getAttribute","elementId","localStorage","setItem","JSON","stringify","App","onSubmit","wirelessSettings_wirelessSettings","controlBtns_controlBtns","ReactDOM","render","components_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.63335c77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refresh_icon.313c6dcf.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport uniqid from 'uniqid';\nimport './contrrolInputBlock.css';\n\nclass ContrrolInputBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disable: true,\n    };\n    this.switcher = this.switcher.bind(this);\n  }\n\n  switcher() {\n    this.setState(prevState => ({\n      disable: !prevState.disable,\n    }));\n  }\n\n  render() {\n    const { disable } = this.state;\n    const { componentChilds, setsId } = this.props;\n    const { mainBtn, minorBtn } = componentChilds;\n    const { childs } = minorBtn;\n    const inputName = `${setsId}-${mainBtn.inputName}-auto`;\n    const inputMinorId = `${minorBtn.id}-${inputName}`;\n    const inputMainId = `${mainBtn.id}-${inputName}`;\n\n    const { blockDisabled } = this.props;\n    return (\n      <>\n        <label htmlFor={inputMainId} className={cn('ip-address__container', { disabled: blockDisabled })}>\n          <input\n            type=\"radio\"\n            name={inputName}\n            id={inputMainId}\n            defaultChecked\n            onChange={this.switcher}\n            disabled={blockDisabled}\n          />\n          {mainBtn.label}\n          <span className=\"checkmark\" />\n        </label>\n        <label htmlFor={inputMinorId} className={cn('ip-address__container', { disabled: blockDisabled })}>\n          <input\n            type=\"radio\"\n            name={inputName}\n            id={inputMinorId}\n            onChange={this.switcher}\n            disabled={blockDisabled}\n          />\n          {minorBtn.label}\n          <span className=\"checkmark\" />\n        </label>\n        <div className=\"ip-address__custom-container\">\n          {\n            childs.map(child => (\n              <label htmlFor={child.id} className=\"ip-address__text\" key={uniqid()}>\n                <span className={cn('text__label-container', { disabled: disable })}>\n                  {child.label}\n                  {child.required && (\n                    <span className={cn('required-symbol',\n                      { disabled: disable })}\n                    >\n                      {' * '}\n                    </span>\n                  )}\n                </span>\n                <input\n                  type=\"text\"\n                  className=\"ip-address__input\"\n                  id={`${setsId}-${child.id}`}\n                  disabled={disable}\n                  required={child.required && !disable}\n                />\n              </label>\n            ))\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nContrrolInputBlock.propTypes = {\n  componentChilds: PropTypes.instanceOf(Object).isRequired,\n  setsId: PropTypes.string.isRequired,\n  blockDisabled: PropTypes.bool,\n};\n\nContrrolInputBlock.defaultProps = {\n  blockDisabled: false,\n};\n\nexport default ContrrolInputBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlInputBlock from '../contrrolInputBlock/contrrolInputBlock';\n\nimport './ethernetSettings.css';\n\nconst EthernetSettings = ({ title, setsId, disabled }) => (\n  <div className=\"ethernet-sets\">\n    {title && (<h3 className=\"ethernet-sets__title\">{title}</h3>)}\n    <div className=\"ethernet-sets__ip-address\">\n      <ControlInputBlock\n        setsId={setsId}\n        blockDisabled={disabled}\n        componentChilds={\n        {\n          mainBtn: {\n            label: 'Obtain an IP address automatically (DHCP/BootP)',\n            id: 'ip-address-auto',\n            inputName: 'ip-address',\n          },\n          minorBtn: {\n            label: 'Use the follow IP address',\n            id: 'ip-address-custom',\n            inputName: 'ip-address',\n            childs: [\n              {\n                label: 'IP address',\n                id: 'ip-address-name',\n                required: true,\n              },\n              {\n                label: 'Subnet Mask',\n                id: 'subnet-mask',\n                required: true,\n              },\n              {\n                label: 'Default Gateway',\n                id: 'default gateway',\n                required: false,\n              },\n            ],\n          },\n        }\n      }\n      />\n      <ControlInputBlock\n        setsId={setsId}\n        blockDisabled={disabled}\n        componentChilds={\n        {\n          mainBtn: {\n            label: 'Obtain DNS server address automatically',\n            id: 'dns-server-auto',\n            inputName: 'dns-server',\n          },\n          minorBtn: {\n            label: 'Use the follow DNS server address',\n            id: 'dns-server-custom',\n            inputName: 'dns-server',\n            childs: [\n              {\n                label: 'Preffered DNS server',\n                id: 'preffered-dns-server-name',\n                required: true,\n              },\n              {\n                label: 'Alternative DNS server',\n                id: 'subnet-mask',\n                required: false,\n              },\n            ],\n          },\n        }\n      }\n      />\n    </div>\n  </div>\n);\n\nEthernetSettings.propTypes = {\n  title: PropTypes.string,\n  setsId: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nEthernetSettings.defaultProps = {\n  title: '',\n  setsId: '',\n  disabled: false,\n};\n\nexport default EthernetSettings;\n","import React from 'react';\nimport unqid from 'uniqid';\nimport PropTypes from 'prop-types';\nimport refreshIcon from '../../assets/img/refresh_icon.svg';\nimport './selectWireless.css';\n\nclass SelectWireless extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      fetchStatus: 'loading',\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.setState({ fetchStatus: 'loading' });\n    setTimeout(() => fetch('/mock.json')\n      .then(response => response.json())\n      .then((result) => {\n        const displayData = [];\n        result.forEach((item) => {\n          displayData.push(<option key={unqid()} value={item.name}>{item.name}</option>);\n        });\n\n        displayData.sort((item1, item2) => item2.strength - item1.strength); // strength sort\n        displayData.sort((item1, item2) => (item2.favorite - item1.favorite)); // favorite sort\n\n        this.setState({ data: displayData, fetchStatus: 'success' });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ fetchStatus: 'error' });\n      }), 2000);\n  }\n\n  render() {\n    const { disableBlock } = this.props;\n    const { data, fetchStatus } = this.state;\n    // eslint-disable-next-line default-case\n    switch (fetchStatus) {\n      case 'loading':\n        return (\n          <>\n            <select\n              disabled={disableBlock}\n              className=\"input-container__select\"\n              id=\"wireless-network-name\"\n            />\n            <button type=\"button\" className=\"network-name__refresk-btn\">\n              <img\n                src={refreshIcon}\n                alt=\"refresh icon\"\n                className=\"refresh-icon loading\"\n              />\n            </button>\n          </>\n        );\n      case 'error':\n        return (\n          <>\n            <select\n              disabled\n              className=\"input-container__select\"\n              id=\"wireless-network-name\"\n            />\n            <button type=\"button\" className=\"network-name__refresk-btn\">\n              <img\n                src={refreshIcon}\n                alt=\"refresh icon\"\n                className=\"refresh-icon error\"\n              />\n            </button>\n            <span className=\"error__message\">Failed to load resourse</span>\n          </>\n        );\n    }\n    return (\n      <>\n        <select\n          disabled={disableBlock}\n          required={!disableBlock}\n          className=\"input-container__select\"\n          id=\"wireless-network-name\"\n        >\n          {data}\n        </select>\n        <button type=\"button\" className=\"network-name__refresk-btn\" onClick={this.fetchData}>\n          <img\n            src={refreshIcon}\n            alt=\"refresh icon\"\n            className=\"refresh-icon\"\n          />\n        </button>\n      </>\n    );\n  }\n}\n\nSelectWireless.propTypes = {\n  disableBlock: PropTypes.bool.isRequired,\n};\n\nexport default SelectWireless;\n","import React from 'react';\nimport cn from 'classnames';\nimport EthernetSettings from '../ethernetSettings/ethernetSettings';\nimport SelectWireless from '../selectWireless/selectWireless';\nimport './wirelessSettings.css';\n\nclass WirelessSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableWifi: true,\n      disableSequrity: true,\n    };\n    this.switchWifi = this.switchWifi.bind(this);\n    this.switchSequrity = this.switchSequrity.bind(this);\n  }\n\n  switchWifi() {\n    this.setState(prevState => ({\n      disableWifi: !prevState.disableWifi,\n    }));\n  }\n\n  switchSequrity() {\n    this.setState(prevState => ({\n      disableSequrity: !prevState.disableSequrity,\n    }));\n  }\n\n  render() {\n    const { disableWifi, disableSequrity } = this.state;\n    return (\n      <div className=\"wireless-sets\">\n        <h3 className=\"wireless-sets__title\">Wireless Settings</h3>\n        <label htmlFor=\"wireless-sets__input\" className=\"wireless-sets__checkbox\">\n          <input\n            name=\"wireless-sets-name\"\n            className=\"wireless-sets__input\"\n            id=\"wireless-sets__input\"\n            type=\"checkbox\"\n            onChange={this.switchWifi}\n          />\n          Enable wifi:\n          <span className=\"checkmark__checkbox\" />\n        </label>\n        <div className={cn('wireless-sets__network-name', { disabled: disableWifi })}>\n            Wireless Network Name:\n          <span className=\"required-symbol\">\n            {' * '}\n          </span>\n          <SelectWireless disableBlock={disableWifi} />\n        </div>\n        <label\n          htmlFor=\"sequrity-checkbox__input\"\n          className={cn('wireless-sets__checkbox', { disabled: disableWifi })}\n        >\n          <input\n            name=\"wireless-sets-sequrity\"\n            className=\"wireless-sets__input\"\n            id=\"sequrity-checkbox__input\"\n            type=\"checkbox\"\n            onChange={this.switchSequrity}\n          />\n          Enable Wireless Sequrity\n          <span className=\"checkmark__checkbox\" />\n        </label>\n        <div className={cn('wireless-sets__sequrity-key', { disabled: disableWifi || disableSequrity })}>\n          <label\n            htmlFor=\"key-container__input\"\n            className=\"sequrity-key__key-container\"\n          >\n            Sequrity key:\n            <span className=\"required-symbol\">\n              {' * '}\n            </span>\n            <input\n              className=\"key-container__input\"\n              id=\"key-container__input\"\n              type=\"text\"\n              disabled={disableSequrity}\n              required={!disableSequrity}\n            />\n          </label>\n        </div>\n        <EthernetSettings setsId=\"wireless\" disabled={disableWifi} />\n      </div>\n    );\n  }\n}\n\nexport default WirelessSettings;\n","import React from 'react';\nimport './controlBtns.css';\n\nclass ControlBtns extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"form__container__control-btns\">\n        <input\n          type=\"submit\"\n          value=\"Save\"\n          className=\"control-btns__save-btn\"\n        />\n        <button\n          type=\"button\"\n          className=\"control-btns__cansel-btn\"\n        >\n          Cansel\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ControlBtns;\n","function submit(event) {\n  event.preventDefault();\n  event.persist();\n  const formElements = [...event.target];\n  const dataToSave = {};\n  formElements.forEach((element) => {\n    if (element.getAttribute('disabled') === null) {\n      const elementId = element.id;\n      dataToSave[elementId] = element.value;\n    }\n  });\n  localStorage.setItem('internetSets', JSON.stringify(dataToSave));\n}\n\nexport default submit;\n","import React from 'react';\nimport './App.css';\n\nimport WirelessSettings from '../wirelessSettings/wirelessSettings';\nimport EthernetSettings from '../ethernetSettings/ethernetSettings';\nimport ControlBtns from '../controlBtns/controlBtns';\n\nimport submit from '../../submit';\n\nconst App = () => (\n  <form className=\"form\" onSubmit={submit}>\n    <div className=\"form__container\">\n      <div className=\"settings-block\">\n        <EthernetSettings title=\"Ethernet Settings\" setsId=\"ethernet\" />\n      </div>\n      <div className=\"settings-block\">\n        <WirelessSettings />\n      </div>\n    </div>\n    <ControlBtns />\n  </form>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport './styleReset.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}