{"version":3,"sources":["assets/img/refresh_icon.svg","api.js","components/contrrolInputBlock/contrrolInputBlock.js","components/ethernetSettings/ethernetSettings.js","components/selectWireless/selectWireless.js","components/wirelessSettings/wirelessSettings.js","components/controlBtns/controlBtns.js","components/app/App.js","index.js"],"names":["module","exports","__webpack_require__","p","submit","event","preventDefault","persist","formElements","Object","toConsumableArray","target","dataToSave","forEach","element","getAttribute","id","elementId","checked","value","localStorage","setItem","JSON","stringify","getPropValue","data","prototype","hasOwnProperty","call","concat","getPropValueChekbox","ContrrolInputBlock","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","disable","initialData","switcher","bind","assertThisInitialized","getInitialData","INITIAL_DATA","parse","getItem","_this$props","componentChilds","setsId","mainBtn","minorBtn","inputName","inputMinorId","setState","prevState","_this$state","_this$props2","childs","inputMainId","blockDisabled","react_default","a","createElement","Fragment","htmlFor","className","cn","disabled","type","name","defaultChecked","onChange","label","map","child","elementValue","key","uniqid","required","defaultValue","pattern","React","Component","defaultProps","EthernetSettings","_ref","title","contrrolInputBlock_contrrolInputBlock","SelectWireless","fetchStatus","fetchData","handleChange","setInitialData","_this2","setTimeout","fetch","then","response","json","result","displayData","item","push","unqid","sort","item1","item2","strength","favorite","catch","err","console","error","disableBlock","src","refreshIcon","alt","onClick","WirelessSettings","disableWifi","disableSequrity","switchWifi","switchSequrity","selectWireless_selectWireless","maxLength","minLength","ethernetSettings_ethernetSettings","ControlBtns","App","onSubmit","wirelessSettings_wirelessSettings","controlBtns_controlBtns","ReactDOM","render","components_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.ea067d93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refresh_icon.313c6dcf.svg\";","export const submit = (event) => {\n  event.preventDefault();\n  event.persist();\n  const formElements = [...event.target];\n  const dataToSave = {};\n  formElements.forEach((element) => {\n    if (element.getAttribute('disabled') === null && element.id) {\n      const elementId = element.id;\n      if (element.getAttribute('type') === 'radio'\n      || element.getAttribute('type') === 'checkbox') {\n        dataToSave[elementId] = element.checked;\n      } else { dataToSave[elementId] = element.value; }\n    }\n  });\n  localStorage.setItem('internetSets', JSON.stringify(dataToSave));\n};\n\nexport const getPropValue = (data, id) => {\n  if (!data) {\n    return '';\n  }\n  const value = Object.prototype.hasOwnProperty.call(data, id) ? `${data[id]}` : '';\n  return value;\n};\n\nexport const getPropValueChekbox = (data, id) => {\n  if (!data) {\n    return false;\n  }\n  return data[id];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport uniqid from 'uniqid';\nimport './contrrolInputBlock.css';\nimport { getPropValue, getPropValueChekbox } from '../../api';\n\nclass ContrrolInputBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disable: true,\n      initialData: {},\n    };\n    this.switcher = this.switcher.bind(this);\n    this.getInitialData = this.getInitialData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getInitialData();\n  }\n\n  getInitialData() {\n    const INITIAL_DATA = JSON.parse(localStorage.getItem('internetSets'));\n\n    const { componentChilds, setsId } = this.props;\n    const { mainBtn, minorBtn } = componentChilds;\n    const inputName = `${setsId}-${mainBtn.inputName}`;\n    const inputMinorId = `${minorBtn.id}-${inputName}`;\n    if (INITIAL_DATA\n      && getPropValueChekbox(INITIAL_DATA, inputMinorId)) {\n      this.setState({ disable: false, initialData: INITIAL_DATA });\n    } else this.setState({ initialData: INITIAL_DATA });\n  }\n\n  switcher() {\n    this.setState(prevState => ({\n      disable: !prevState.disable,\n    }));\n  }\n\n\n  render() {\n    const { disable, initialData } = this.state;\n    const { componentChilds, setsId } = this.props;\n    const { mainBtn, minorBtn } = componentChilds;\n    const { childs } = minorBtn;\n    const inputName = `${setsId}-${mainBtn.inputName}`;\n    const inputMainId = `${mainBtn.id}-${inputName}`;\n    const inputMinorId = `${minorBtn.id}-${inputName}`;\n\n    const { blockDisabled } = this.props;\n    return (\n      <>\n        <label htmlFor={inputMainId} className={cn('ip-address__container', { disabled: blockDisabled })}>\n          <input\n            type=\"radio\"\n            name={inputName}\n            id={inputMainId}\n            defaultChecked\n            onChange={this.switcher}\n          />\n          {mainBtn.label}\n          <span className=\"checkmark\" />\n        </label>\n        <label htmlFor={inputMinorId} className={cn('ip-address__container', { disabled: blockDisabled })}>\n          <input\n            type=\"radio\"\n            name={inputName}\n            id={inputMinorId}\n            checked={!disable}\n            onChange={this.switcher}\n          />\n          {minorBtn.label}\n          <span className=\"checkmark\" />\n        </label>\n        <div className=\"ip-address__custom-container\">\n          {\n            childs.map((child) => {\n              const elementId = `${setsId}-${child.id}`;\n              const elementValue = getPropValue(initialData, elementId);\n              return (\n                <label htmlFor={child.id} className=\"ip-address__text\" key={uniqid()}>\n                  <span className={cn('text__label-container', { disabled: disable })}>\n                    {child.label}\n                    {child.required && (\n                    <span className={cn('required-symbol',\n                      { disabled: disable })}\n                    >\n                      {' * '}\n                    </span>\n                    )}\n                  </span>\n                  <input\n                    defaultValue={elementValue}\n                    type=\"text\"\n                    className=\"ip-address__input\"\n                    id={`${elementId}`}\n                    disabled={disable}\n                    required={child.required && !disable}\n                    pattern=\"\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b\"\n                  />\n                </label>\n              );\n            })\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nContrrolInputBlock.propTypes = {\n  componentChilds: PropTypes.instanceOf(Object).isRequired,\n  setsId: PropTypes.string.isRequired,\n  blockDisabled: PropTypes.bool,\n};\n\nContrrolInputBlock.defaultProps = {\n  blockDisabled: false,\n};\n\nexport default ContrrolInputBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlInputBlock from '../contrrolInputBlock/contrrolInputBlock';\n\nimport './ethernetSettings.css';\n\nconst EthernetSettings = ({ title, setsId, disabled }) => (\n  <div className=\"ethernet-sets\">\n    {title && (<h3 className=\"ethernet-sets__title\">{title}</h3>)}\n    <div className=\"ethernet-sets__ip-address\">\n      <ControlInputBlock\n        setsId={setsId}\n        blockDisabled={disabled}\n        componentChilds={\n        {\n          mainBtn: {\n            label: 'Obtain an IP address automatically (DHCP/BootP)',\n            id: 'ip-address-auto',\n            inputName: 'ip-address',\n          },\n          minorBtn: {\n            label: 'Use the follow IP address',\n            id: 'ip-address-custom',\n            inputName: 'ip-address',\n            childs: [\n              {\n                label: 'IP address',\n                id: 'ip-address-name',\n                required: true,\n              },\n              {\n                label: 'Subnet Mask',\n                id: 'subnet-mask',\n                required: true,\n              },\n              {\n                label: 'Default Gateway',\n                id: 'default gateway',\n                required: false,\n              },\n            ],\n          },\n        }\n      }\n      />\n      <ControlInputBlock\n        setsId={setsId}\n        blockDisabled={disabled}\n        componentChilds={\n        {\n          mainBtn: {\n            label: 'Obtain DNS server address automatically',\n            id: 'dns-server-auto',\n            inputName: 'dns-server',\n          },\n          minorBtn: {\n            label: 'Use the follow DNS server address',\n            id: 'dns-server-custom',\n            inputName: 'dns-server',\n            childs: [\n              {\n                label: 'Preffered DNS server',\n                id: 'preffered-dns-server-name',\n                required: true,\n              },\n              {\n                label: 'Alternative DNS server',\n                id: 'alternative-dns-server',\n                required: false,\n              },\n            ],\n          },\n        }\n      }\n      />\n    </div>\n  </div>\n);\n\nEthernetSettings.propTypes = {\n  title: PropTypes.string,\n  setsId: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nEthernetSettings.defaultProps = {\n  title: '',\n  setsId: '',\n  disabled: false,\n};\n\nexport default EthernetSettings;\n","import React from 'react';\nimport unqid from 'uniqid';\nimport PropTypes from 'prop-types';\nimport refreshIcon from '../../assets/img/refresh_icon.svg';\nimport { getPropValue } from '../../api';\nimport './selectWireless.css';\n\nclass SelectWireless extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      fetchStatus: 'loading',\n      value: '',\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.setInitialData = this.setInitialData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.setInitialData();\n  }\n\n  setInitialData() {\n    const initialData = JSON.parse(localStorage.getItem('internetSets'));\n    const defaultValue = getPropValue(initialData, 'wireless-network-name');\n    this.setState({ value: defaultValue });\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n\n  fetchData() {\n    this.setState({ fetchStatus: 'loading' });\n    setTimeout(() => fetch('./mock.json')\n      .then(response => response.json())\n      .then((result) => {\n        const displayData = [];\n        result.forEach((item) => {\n          displayData.push(<option key={unqid()} value={item.name}>{item.name}</option>);\n        });\n\n        displayData.sort((item1, item2) => item2.strength - item1.strength); // strength sort\n        displayData.sort((item1, item2) => (item2.favorite - item1.favorite)); // favorite sort\n\n        this.setState({ data: displayData, fetchStatus: 'success' });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({ fetchStatus: 'error' });\n      }), 2000);\n  }\n\n  render() {\n    const { disableBlock } = this.props;\n    const { data, fetchStatus, value } = this.state;\n    // eslint-disable-next-line default-case\n    switch (fetchStatus) {\n      case 'loading':\n        return (\n          <>\n            <select\n              disabled={disableBlock}\n              className=\"input-container__select\"\n              id=\"wireless-network-name\"\n            />\n            <button type=\"button\" className=\"network-name__refresk-btn\">\n              <img\n                src={refreshIcon}\n                alt=\"refresh icon\"\n                className=\"refresh-icon loading\"\n              />\n            </button>\n          </>\n        );\n      case 'error':\n        return (\n          <>\n            <select\n              disabled\n              className=\"input-container__select\"\n              id=\"wireless-network-name\"\n            />\n            <button type=\"button\" className=\"network-name__refresk-btn\">\n              <img\n                src={refreshIcon}\n                alt=\"refresh icon\"\n                className=\"refresh-icon error\"\n              />\n            </button>\n            <span className=\"error__message\">Failed to load resourse</span>\n          </>\n        );\n    }\n    return (\n      <>\n        <select\n          disabled={disableBlock}\n          required={!disableBlock}\n          className=\"input-container__select\"\n          id=\"wireless-network-name\"\n          value={value}\n          onChange={this.handleChange}\n        >\n          {data}\n        </select>\n        <button type=\"button\" className=\"network-name__refresk-btn\" onClick={this.fetchData}>\n          <img\n            src={refreshIcon}\n            alt=\"refresh icon\"\n            className=\"refresh-icon\"\n          />\n        </button>\n      </>\n    );\n  }\n}\n\nSelectWireless.propTypes = {\n  disableBlock: PropTypes.bool.isRequired,\n};\n\nexport default SelectWireless;\n","import React from 'react';\nimport cn from 'classnames';\nimport EthernetSettings from '../ethernetSettings/ethernetSettings';\nimport SelectWireless from '../selectWireless/selectWireless';\nimport { getPropValue, getPropValueChekbox } from '../../api';\nimport './wirelessSettings.css';\n\nclass WirelessSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableWifi: true,\n      disableSequrity: true,\n      initialData: {},\n    };\n    this.switchWifi = this.switchWifi.bind(this);\n    this.switchSequrity = this.switchSequrity.bind(this);\n    this.getInitialData = this.getInitialData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getInitialData();\n  }\n\n  getInitialData() {\n    const INITIAL_DATA = JSON.parse(localStorage.getItem('internetSets'));\n    if (!INITIAL_DATA) {\n      return;\n    }\n    this.setState({ initialData: INITIAL_DATA });\n    if (getPropValueChekbox(INITIAL_DATA, 'wireless-sets__input')) {\n      this.setState({ disableWifi: false });\n      if (getPropValueChekbox(INITIAL_DATA, 'sequrity-checkbox__input')) {\n        this.setState({ disableSequrity: false });\n      }\n    }\n  }\n\n  switchWifi() {\n    this.setState(prevState => ({\n      disableWifi: !prevState.disableWifi,\n    }));\n  }\n\n  switchSequrity() {\n    this.setState(prevState => ({\n      disableSequrity: !prevState.disableSequrity,\n    }));\n  }\n\n  render() {\n    const {\n      disableWifi,\n      disableSequrity,\n      initialData,\n    } = this.state;\n    return (\n      <div className=\"wireless-sets\">\n        <h3 className=\"wireless-sets__title\">Wireless Settings</h3>\n        <label htmlFor=\"wireless-sets__input\" className=\"wireless-sets__checkbox\">\n          <input\n            name=\"wireless-sets-name\"\n            className=\"wireless-sets__input\"\n            id=\"wireless-sets__input\"\n            type=\"checkbox\"\n            onChange={this.switchWifi}\n            checked={!disableWifi}\n          />\n          Enable wifi:\n          <span className=\"checkmark__checkbox\" />\n        </label>\n        <div className={cn('wireless-sets__network-name', { disabled: disableWifi })}>\n            Wireless Network Name:\n          <span className=\"required-symbol\">\n            {' * '}\n          </span>\n          <SelectWireless disableBlock={disableWifi} />\n        </div>\n        <label\n          htmlFor=\"sequrity-checkbox__input\"\n          className={cn('wireless-sets__checkbox', { disabled: disableWifi })}\n        >\n          <input\n            name=\"wireless-sets-sequrity\"\n            className=\"wireless-sets__input\"\n            id=\"sequrity-checkbox__input\"\n            type=\"checkbox\"\n            onChange={this.switchSequrity}\n            checked={!disableSequrity}\n          />\n          Enable Wireless Sequrity\n          <span className=\"checkmark__checkbox\" />\n        </label>\n        <div className={cn('wireless-sets__sequrity-key', { disabled: disableWifi || disableSequrity })}>\n          <label\n            htmlFor=\"key-container__input\"\n            className=\"sequrity-key__key-container\"\n          >\n            Sequrity key:\n            <span className=\"required-symbol\">\n              {' * '}\n            </span>\n            <input\n              className=\"key-container__input\"\n              id=\"key-container__input\"\n              type=\"text\"\n              defaultValue={getPropValue(initialData, 'key-container__input')}\n              disabled={disableSequrity}\n              required={!disableSequrity}\n              maxLength=\"20\"\n              minLength=\"8\"\n            />\n          </label>\n        </div>\n        <EthernetSettings setsId=\"wireless\" disabled={disableWifi} />\n      </div>\n    );\n  }\n}\n\nexport default WirelessSettings;\n","import React from 'react';\nimport './controlBtns.css';\n\nclass ControlBtns extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"form__container__control-btns\">\n        <input\n          type=\"submit\"\n          value=\"Save\"\n          className=\"control-btns__save-btn\"\n        />\n        <button\n          type=\"button\"\n          className=\"control-btns__cansel-btn\"\n        >\n          Cansel\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ControlBtns;\n","import React from 'react';\nimport './App.css';\n\nimport WirelessSettings from '../wirelessSettings/wirelessSettings';\nimport EthernetSettings from '../ethernetSettings/ethernetSettings';\nimport ControlBtns from '../controlBtns/controlBtns';\n\nimport { submit } from '../../api';\n\nconst App = () => (\n  <form className=\"form\" onSubmit={submit}>\n    <div className=\"form__container\">\n      <div className=\"settings-block\">\n        <EthernetSettings title=\"Ethernet Settings\" setsId=\"ethernet\" />\n      </div>\n      <div className=\"settings-block\">\n        <WirelessSettings />\n      </div>\n    </div>\n    <ControlBtns />\n  </form>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport './styleReset.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}